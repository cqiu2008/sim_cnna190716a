// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module testAxiProcess (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_iPara_width_read,
        cnn_iPara_height_read,
        cnn_iPara_ciAlign_V_read,
        cnn_iPara_memAddrImgIn_V_read,
        cnn_oPara_coAlign_V_read,
        cnn_oPara_memAddrImgOut_V_read,
        m_axi_fiddr_V_AWVALID,
        m_axi_fiddr_V_AWREADY,
        m_axi_fiddr_V_AWADDR,
        m_axi_fiddr_V_AWID,
        m_axi_fiddr_V_AWLEN,
        m_axi_fiddr_V_AWSIZE,
        m_axi_fiddr_V_AWBURST,
        m_axi_fiddr_V_AWLOCK,
        m_axi_fiddr_V_AWCACHE,
        m_axi_fiddr_V_AWPROT,
        m_axi_fiddr_V_AWQOS,
        m_axi_fiddr_V_AWREGION,
        m_axi_fiddr_V_AWUSER,
        m_axi_fiddr_V_WVALID,
        m_axi_fiddr_V_WREADY,
        m_axi_fiddr_V_WDATA,
        m_axi_fiddr_V_WSTRB,
        m_axi_fiddr_V_WLAST,
        m_axi_fiddr_V_WID,
        m_axi_fiddr_V_WUSER,
        m_axi_fiddr_V_ARVALID,
        m_axi_fiddr_V_ARREADY,
        m_axi_fiddr_V_ARADDR,
        m_axi_fiddr_V_ARID,
        m_axi_fiddr_V_ARLEN,
        m_axi_fiddr_V_ARSIZE,
        m_axi_fiddr_V_ARBURST,
        m_axi_fiddr_V_ARLOCK,
        m_axi_fiddr_V_ARCACHE,
        m_axi_fiddr_V_ARPROT,
        m_axi_fiddr_V_ARQOS,
        m_axi_fiddr_V_ARREGION,
        m_axi_fiddr_V_ARUSER,
        m_axi_fiddr_V_RVALID,
        m_axi_fiddr_V_RREADY,
        m_axi_fiddr_V_RDATA,
        m_axi_fiddr_V_RLAST,
        m_axi_fiddr_V_RID,
        m_axi_fiddr_V_RUSER,
        m_axi_fiddr_V_RRESP,
        m_axi_fiddr_V_BVALID,
        m_axi_fiddr_V_BREADY,
        m_axi_fiddr_V_BRESP,
        m_axi_fiddr_V_BID,
        m_axi_fiddr_V_BUSER,
        fiddr_V_offset,
        m_axi_foddr_V_AWVALID,
        m_axi_foddr_V_AWREADY,
        m_axi_foddr_V_AWADDR,
        m_axi_foddr_V_AWID,
        m_axi_foddr_V_AWLEN,
        m_axi_foddr_V_AWSIZE,
        m_axi_foddr_V_AWBURST,
        m_axi_foddr_V_AWLOCK,
        m_axi_foddr_V_AWCACHE,
        m_axi_foddr_V_AWPROT,
        m_axi_foddr_V_AWQOS,
        m_axi_foddr_V_AWREGION,
        m_axi_foddr_V_AWUSER,
        m_axi_foddr_V_WVALID,
        m_axi_foddr_V_WREADY,
        m_axi_foddr_V_WDATA,
        m_axi_foddr_V_WSTRB,
        m_axi_foddr_V_WLAST,
        m_axi_foddr_V_WID,
        m_axi_foddr_V_WUSER,
        m_axi_foddr_V_ARVALID,
        m_axi_foddr_V_ARREADY,
        m_axi_foddr_V_ARADDR,
        m_axi_foddr_V_ARID,
        m_axi_foddr_V_ARLEN,
        m_axi_foddr_V_ARSIZE,
        m_axi_foddr_V_ARBURST,
        m_axi_foddr_V_ARLOCK,
        m_axi_foddr_V_ARCACHE,
        m_axi_foddr_V_ARPROT,
        m_axi_foddr_V_ARQOS,
        m_axi_foddr_V_ARREGION,
        m_axi_foddr_V_ARUSER,
        m_axi_foddr_V_RVALID,
        m_axi_foddr_V_RREADY,
        m_axi_foddr_V_RDATA,
        m_axi_foddr_V_RLAST,
        m_axi_foddr_V_RID,
        m_axi_foddr_V_RUSER,
        m_axi_foddr_V_RRESP,
        m_axi_foddr_V_BVALID,
        m_axi_foddr_V_BREADY,
        m_axi_foddr_V_BRESP,
        m_axi_foddr_V_BID,
        m_axi_foddr_V_BUSER,
        foddr_V_offset,
        bbuf0_V_address0,
        bbuf0_V_ce0,
        bbuf0_V_q0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_pp0_stage0 = 8'd4;
parameter    ap_ST_fsm_state5 = 8'd8;
parameter    ap_ST_fsm_state6 = 8'd16;
parameter    ap_ST_fsm_state7 = 8'd32;
parameter    ap_ST_fsm_state8 = 8'd64;
parameter    ap_ST_fsm_state9 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] cnn_iPara_width_read;
input  [15:0] cnn_iPara_height_read;
input  [12:0] cnn_iPara_ciAlign_V_read;
input  [39:0] cnn_iPara_memAddrImgIn_V_read;
input  [12:0] cnn_oPara_coAlign_V_read;
input  [39:0] cnn_oPara_memAddrImgOut_V_read;
output   m_axi_fiddr_V_AWVALID;
input   m_axi_fiddr_V_AWREADY;
output  [31:0] m_axi_fiddr_V_AWADDR;
output  [0:0] m_axi_fiddr_V_AWID;
output  [31:0] m_axi_fiddr_V_AWLEN;
output  [2:0] m_axi_fiddr_V_AWSIZE;
output  [1:0] m_axi_fiddr_V_AWBURST;
output  [1:0] m_axi_fiddr_V_AWLOCK;
output  [3:0] m_axi_fiddr_V_AWCACHE;
output  [2:0] m_axi_fiddr_V_AWPROT;
output  [3:0] m_axi_fiddr_V_AWQOS;
output  [3:0] m_axi_fiddr_V_AWREGION;
output  [0:0] m_axi_fiddr_V_AWUSER;
output   m_axi_fiddr_V_WVALID;
input   m_axi_fiddr_V_WREADY;
output  [127:0] m_axi_fiddr_V_WDATA;
output  [15:0] m_axi_fiddr_V_WSTRB;
output   m_axi_fiddr_V_WLAST;
output  [0:0] m_axi_fiddr_V_WID;
output  [0:0] m_axi_fiddr_V_WUSER;
output   m_axi_fiddr_V_ARVALID;
input   m_axi_fiddr_V_ARREADY;
output  [31:0] m_axi_fiddr_V_ARADDR;
output  [0:0] m_axi_fiddr_V_ARID;
output  [31:0] m_axi_fiddr_V_ARLEN;
output  [2:0] m_axi_fiddr_V_ARSIZE;
output  [1:0] m_axi_fiddr_V_ARBURST;
output  [1:0] m_axi_fiddr_V_ARLOCK;
output  [3:0] m_axi_fiddr_V_ARCACHE;
output  [2:0] m_axi_fiddr_V_ARPROT;
output  [3:0] m_axi_fiddr_V_ARQOS;
output  [3:0] m_axi_fiddr_V_ARREGION;
output  [0:0] m_axi_fiddr_V_ARUSER;
input   m_axi_fiddr_V_RVALID;
output   m_axi_fiddr_V_RREADY;
input  [127:0] m_axi_fiddr_V_RDATA;
input   m_axi_fiddr_V_RLAST;
input  [0:0] m_axi_fiddr_V_RID;
input  [0:0] m_axi_fiddr_V_RUSER;
input  [1:0] m_axi_fiddr_V_RRESP;
input   m_axi_fiddr_V_BVALID;
output   m_axi_fiddr_V_BREADY;
input  [1:0] m_axi_fiddr_V_BRESP;
input  [0:0] m_axi_fiddr_V_BID;
input  [0:0] m_axi_fiddr_V_BUSER;
input  [27:0] fiddr_V_offset;
output   m_axi_foddr_V_AWVALID;
input   m_axi_foddr_V_AWREADY;
output  [31:0] m_axi_foddr_V_AWADDR;
output  [0:0] m_axi_foddr_V_AWID;
output  [31:0] m_axi_foddr_V_AWLEN;
output  [2:0] m_axi_foddr_V_AWSIZE;
output  [1:0] m_axi_foddr_V_AWBURST;
output  [1:0] m_axi_foddr_V_AWLOCK;
output  [3:0] m_axi_foddr_V_AWCACHE;
output  [2:0] m_axi_foddr_V_AWPROT;
output  [3:0] m_axi_foddr_V_AWQOS;
output  [3:0] m_axi_foddr_V_AWREGION;
output  [0:0] m_axi_foddr_V_AWUSER;
output   m_axi_foddr_V_WVALID;
input   m_axi_foddr_V_WREADY;
output  [127:0] m_axi_foddr_V_WDATA;
output  [15:0] m_axi_foddr_V_WSTRB;
output   m_axi_foddr_V_WLAST;
output  [0:0] m_axi_foddr_V_WID;
output  [0:0] m_axi_foddr_V_WUSER;
output   m_axi_foddr_V_ARVALID;
input   m_axi_foddr_V_ARREADY;
output  [31:0] m_axi_foddr_V_ARADDR;
output  [0:0] m_axi_foddr_V_ARID;
output  [31:0] m_axi_foddr_V_ARLEN;
output  [2:0] m_axi_foddr_V_ARSIZE;
output  [1:0] m_axi_foddr_V_ARBURST;
output  [1:0] m_axi_foddr_V_ARLOCK;
output  [3:0] m_axi_foddr_V_ARCACHE;
output  [2:0] m_axi_foddr_V_ARPROT;
output  [3:0] m_axi_foddr_V_ARQOS;
output  [3:0] m_axi_foddr_V_ARREGION;
output  [0:0] m_axi_foddr_V_ARUSER;
input   m_axi_foddr_V_RVALID;
output   m_axi_foddr_V_RREADY;
input  [127:0] m_axi_foddr_V_RDATA;
input   m_axi_foddr_V_RLAST;
input  [0:0] m_axi_foddr_V_RID;
input  [0:0] m_axi_foddr_V_RUSER;
input  [1:0] m_axi_foddr_V_RRESP;
input   m_axi_foddr_V_BVALID;
output   m_axi_foddr_V_BREADY;
input  [1:0] m_axi_foddr_V_BRESP;
input  [0:0] m_axi_foddr_V_BID;
input  [0:0] m_axi_foddr_V_BUSER;
input  [27:0] foddr_V_offset;
output  [8:0] bbuf0_V_address0;
output   bbuf0_V_ce0;
input  [127:0] bbuf0_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_fiddr_V_ARVALID;
reg m_axi_fiddr_V_RREADY;
reg m_axi_foddr_V_AWVALID;
reg m_axi_foddr_V_WVALID;
reg m_axi_foddr_V_BREADY;
reg[8:0] bbuf0_V_address0;
reg bbuf0_V_ce0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] ibuf0_V_address0;
reg    ibuf0_V_ce0;
reg    ibuf0_V_we0;
wire   [127:0] ibuf0_V_q0;
reg   [127:0] biasData_reg_170;
reg   [12:0] t_V_reg_180;
wire    ap_CS_fsm_state2;
wire  signed [25:0] lineWidthDiv16_fu_342_p2;
reg   [25:0] lineWidthDiv16_reg_374;
wire   [12:0] ret_V_1_fu_282_p1;
reg   [12:0] ret_V_1_reg_385;
wire   [0:0] tmp_9_fu_286_p2;
reg   [0:0] tmp_9_reg_390;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [12:0] coDiv16_V_fu_296_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [127:0] biasData_V_1_fu_302_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] tmp_3_fu_322_p2;
reg   [15:0] tmp_3_reg_409;
wire    ap_CS_fsm_state5;
wire   [14:0] hIndex_1_fu_336_p2;
reg   [14:0] hIndex_1_reg_417;
wire    ap_CS_fsm_state6;
wire   [15:0] grp_loadImageFromDRAM_fu_215_ap_return;
reg   [15:0] ibuf0Index_1_reg_422;
wire    ap_CS_fsm_state7;
wire    grp_loadImageFromDRAM_fu_215_ap_ready;
wire    grp_loadImageFromDRAM_fu_215_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    grp_loadImageFromDRAM_fu_215_ap_start;
wire    grp_loadImageFromDRAM_fu_215_ap_idle;
wire    grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWVALID;
wire   [31:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWADDR;
wire   [0:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWID;
wire   [31:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWLEN;
wire   [2:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWSIZE;
wire   [1:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWBURST;
wire   [1:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWLOCK;
wire   [3:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWCACHE;
wire   [2:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWPROT;
wire   [3:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWQOS;
wire   [3:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWREGION;
wire   [0:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWUSER;
wire    grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WVALID;
wire   [127:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WDATA;
wire   [15:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WSTRB;
wire    grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WLAST;
wire   [0:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WID;
wire   [0:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WUSER;
wire    grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARVALID;
wire   [31:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARADDR;
wire   [0:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARID;
wire   [31:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARLEN;
wire   [2:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARSIZE;
wire   [1:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARBURST;
wire   [1:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARLOCK;
wire   [3:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARCACHE;
wire   [2:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARPROT;
wire   [3:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARQOS;
wire   [3:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARREGION;
wire   [0:0] grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARUSER;
wire    grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_RREADY;
wire    grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_BREADY;
wire   [9:0] grp_loadImageFromDRAM_fu_215_ibuf_V_address0;
wire    grp_loadImageFromDRAM_fu_215_ibuf_V_ce0;
wire    grp_loadImageFromDRAM_fu_215_ibuf_V_we0;
wire   [127:0] grp_loadImageFromDRAM_fu_215_ibuf_V_d0;
wire    grp_testUnLoadImage_fu_231_ap_start;
wire    grp_testUnLoadImage_fu_231_ap_done;
wire    grp_testUnLoadImage_fu_231_ap_idle;
wire    grp_testUnLoadImage_fu_231_ap_ready;
wire    grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWVALID;
wire   [31:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWADDR;
wire   [0:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWID;
wire   [31:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWLEN;
wire   [2:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWSIZE;
wire   [1:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWBURST;
wire   [1:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWLOCK;
wire   [3:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWCACHE;
wire   [2:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWPROT;
wire   [3:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWQOS;
wire   [3:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWREGION;
wire   [0:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWUSER;
wire    grp_testUnLoadImage_fu_231_m_axi_foddr_V_WVALID;
wire   [127:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_WDATA;
wire   [15:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_WSTRB;
wire    grp_testUnLoadImage_fu_231_m_axi_foddr_V_WLAST;
wire   [0:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_WID;
wire   [0:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_WUSER;
wire    grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARVALID;
wire   [31:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARADDR;
wire   [0:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARID;
wire   [31:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARLEN;
wire   [2:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARSIZE;
wire   [1:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARBURST;
wire   [1:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARLOCK;
wire   [3:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARCACHE;
wire   [2:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARPROT;
wire   [3:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARQOS;
wire   [3:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARREGION;
wire   [0:0] grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARUSER;
wire    grp_testUnLoadImage_fu_231_m_axi_foddr_V_RREADY;
wire    grp_testUnLoadImage_fu_231_m_axi_foddr_V_BREADY;
wire   [9:0] grp_testUnLoadImage_fu_231_ibuf0_V_address0;
wire    grp_testUnLoadImage_fu_231_ibuf0_V_ce0;
wire    ap_block_pp0_stage0;
reg   [15:0] ibuf0Index_reg_191;
wire    ap_CS_fsm_state9;
reg   [14:0] hIndex_reg_203;
reg    grp_loadImageFromDRAM_fu_215_ap_start_reg;
wire   [0:0] tmp_4_fu_331_p2;
reg    grp_testUnLoadImage_fu_231_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_1_fu_291_p1;
wire   [13:0] lhs_V_cast_fu_244_p1;
wire   [13:0] ret_V_4_tr_fu_248_p2;
wire   [9:0] tmp_fu_254_p4;
wire   [8:0] ret_V_fu_272_p4;
wire   [0:0] tmp_2_fu_308_p2;
wire   [15:0] tmp_3_cast_fu_314_p3;
wire   [15:0] hIndex_cast_fu_327_p1;
wire   [9:0] lineWidthDiv16_fu_342_p0;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [25:0] lineWidthDiv16_fu_342_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_loadImageFromDRAM_fu_215_ap_start_reg = 1'b0;
#0 grp_testUnLoadImage_fu_231_ap_start_reg = 1'b0;
end

testAxiProcess_ibuf0_V #(
    .DataWidth( 128 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
ibuf0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ibuf0_V_address0),
    .ce0(ibuf0_V_ce0),
    .we0(ibuf0_V_we0),
    .d0(grp_loadImageFromDRAM_fu_215_ibuf_V_d0),
    .q0(ibuf0_V_q0)
);

loadImageFromDRAM grp_loadImageFromDRAM_fu_215(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_loadImageFromDRAM_fu_215_ap_start),
    .ap_done(grp_loadImageFromDRAM_fu_215_ap_done),
    .ap_idle(grp_loadImageFromDRAM_fu_215_ap_idle),
    .ap_ready(grp_loadImageFromDRAM_fu_215_ap_ready),
    .cnn_iPara_height_read(cnn_iPara_height_read),
    .cnn_iPara_memAddrImgIn_V_read(cnn_iPara_memAddrImgIn_V_read),
    .m_axi_fiddr_V_AWVALID(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWVALID),
    .m_axi_fiddr_V_AWREADY(1'b0),
    .m_axi_fiddr_V_AWADDR(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWADDR),
    .m_axi_fiddr_V_AWID(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWID),
    .m_axi_fiddr_V_AWLEN(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWLEN),
    .m_axi_fiddr_V_AWSIZE(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWSIZE),
    .m_axi_fiddr_V_AWBURST(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWBURST),
    .m_axi_fiddr_V_AWLOCK(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWLOCK),
    .m_axi_fiddr_V_AWCACHE(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWCACHE),
    .m_axi_fiddr_V_AWPROT(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWPROT),
    .m_axi_fiddr_V_AWQOS(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWQOS),
    .m_axi_fiddr_V_AWREGION(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWREGION),
    .m_axi_fiddr_V_AWUSER(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_AWUSER),
    .m_axi_fiddr_V_WVALID(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WVALID),
    .m_axi_fiddr_V_WREADY(1'b0),
    .m_axi_fiddr_V_WDATA(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WDATA),
    .m_axi_fiddr_V_WSTRB(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WSTRB),
    .m_axi_fiddr_V_WLAST(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WLAST),
    .m_axi_fiddr_V_WID(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WID),
    .m_axi_fiddr_V_WUSER(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_WUSER),
    .m_axi_fiddr_V_ARVALID(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARVALID),
    .m_axi_fiddr_V_ARREADY(m_axi_fiddr_V_ARREADY),
    .m_axi_fiddr_V_ARADDR(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARADDR),
    .m_axi_fiddr_V_ARID(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARID),
    .m_axi_fiddr_V_ARLEN(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARLEN),
    .m_axi_fiddr_V_ARSIZE(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARSIZE),
    .m_axi_fiddr_V_ARBURST(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARBURST),
    .m_axi_fiddr_V_ARLOCK(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARLOCK),
    .m_axi_fiddr_V_ARCACHE(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARCACHE),
    .m_axi_fiddr_V_ARPROT(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARPROT),
    .m_axi_fiddr_V_ARQOS(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARQOS),
    .m_axi_fiddr_V_ARREGION(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARREGION),
    .m_axi_fiddr_V_ARUSER(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARUSER),
    .m_axi_fiddr_V_RVALID(m_axi_fiddr_V_RVALID),
    .m_axi_fiddr_V_RREADY(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_RREADY),
    .m_axi_fiddr_V_RDATA(m_axi_fiddr_V_RDATA),
    .m_axi_fiddr_V_RLAST(m_axi_fiddr_V_RLAST),
    .m_axi_fiddr_V_RID(m_axi_fiddr_V_RID),
    .m_axi_fiddr_V_RUSER(m_axi_fiddr_V_RUSER),
    .m_axi_fiddr_V_RRESP(m_axi_fiddr_V_RRESP),
    .m_axi_fiddr_V_BVALID(1'b0),
    .m_axi_fiddr_V_BREADY(grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_BREADY),
    .m_axi_fiddr_V_BRESP(2'd0),
    .m_axi_fiddr_V_BID(1'd0),
    .m_axi_fiddr_V_BUSER(1'd0),
    .fiddr_V_offset(fiddr_V_offset),
    .lineWidthDiv16(lineWidthDiv16_reg_374),
    .hIndex(hIndex_reg_203),
    .ibufIndex_read(ibuf0Index_reg_191),
    .ibuf_V_address0(grp_loadImageFromDRAM_fu_215_ibuf_V_address0),
    .ibuf_V_ce0(grp_loadImageFromDRAM_fu_215_ibuf_V_ce0),
    .ibuf_V_we0(grp_loadImageFromDRAM_fu_215_ibuf_V_we0),
    .ibuf_V_d0(grp_loadImageFromDRAM_fu_215_ibuf_V_d0),
    .ap_return(grp_loadImageFromDRAM_fu_215_ap_return)
);

testUnLoadImage grp_testUnLoadImage_fu_231(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_testUnLoadImage_fu_231_ap_start),
    .ap_done(grp_testUnLoadImage_fu_231_ap_done),
    .ap_idle(grp_testUnLoadImage_fu_231_ap_idle),
    .ap_ready(grp_testUnLoadImage_fu_231_ap_ready),
    .cnn_oPara_memAddrImgOut_V_read(cnn_oPara_memAddrImgOut_V_read),
    .lineWidthDiv16(lineWidthDiv16_reg_374),
    .hIndex(hIndex_reg_203),
    .m_axi_foddr_V_AWVALID(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWVALID),
    .m_axi_foddr_V_AWREADY(m_axi_foddr_V_AWREADY),
    .m_axi_foddr_V_AWADDR(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWADDR),
    .m_axi_foddr_V_AWID(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWID),
    .m_axi_foddr_V_AWLEN(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWLEN),
    .m_axi_foddr_V_AWSIZE(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWSIZE),
    .m_axi_foddr_V_AWBURST(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWBURST),
    .m_axi_foddr_V_AWLOCK(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWLOCK),
    .m_axi_foddr_V_AWCACHE(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWCACHE),
    .m_axi_foddr_V_AWPROT(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWPROT),
    .m_axi_foddr_V_AWQOS(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWQOS),
    .m_axi_foddr_V_AWREGION(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWREGION),
    .m_axi_foddr_V_AWUSER(grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWUSER),
    .m_axi_foddr_V_WVALID(grp_testUnLoadImage_fu_231_m_axi_foddr_V_WVALID),
    .m_axi_foddr_V_WREADY(m_axi_foddr_V_WREADY),
    .m_axi_foddr_V_WDATA(grp_testUnLoadImage_fu_231_m_axi_foddr_V_WDATA),
    .m_axi_foddr_V_WSTRB(grp_testUnLoadImage_fu_231_m_axi_foddr_V_WSTRB),
    .m_axi_foddr_V_WLAST(grp_testUnLoadImage_fu_231_m_axi_foddr_V_WLAST),
    .m_axi_foddr_V_WID(grp_testUnLoadImage_fu_231_m_axi_foddr_V_WID),
    .m_axi_foddr_V_WUSER(grp_testUnLoadImage_fu_231_m_axi_foddr_V_WUSER),
    .m_axi_foddr_V_ARVALID(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARVALID),
    .m_axi_foddr_V_ARREADY(1'b0),
    .m_axi_foddr_V_ARADDR(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARADDR),
    .m_axi_foddr_V_ARID(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARID),
    .m_axi_foddr_V_ARLEN(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARLEN),
    .m_axi_foddr_V_ARSIZE(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARSIZE),
    .m_axi_foddr_V_ARBURST(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARBURST),
    .m_axi_foddr_V_ARLOCK(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARLOCK),
    .m_axi_foddr_V_ARCACHE(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARCACHE),
    .m_axi_foddr_V_ARPROT(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARPROT),
    .m_axi_foddr_V_ARQOS(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARQOS),
    .m_axi_foddr_V_ARREGION(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARREGION),
    .m_axi_foddr_V_ARUSER(grp_testUnLoadImage_fu_231_m_axi_foddr_V_ARUSER),
    .m_axi_foddr_V_RVALID(1'b0),
    .m_axi_foddr_V_RREADY(grp_testUnLoadImage_fu_231_m_axi_foddr_V_RREADY),
    .m_axi_foddr_V_RDATA(128'd0),
    .m_axi_foddr_V_RLAST(1'b0),
    .m_axi_foddr_V_RID(1'd0),
    .m_axi_foddr_V_RUSER(1'd0),
    .m_axi_foddr_V_RRESP(2'd0),
    .m_axi_foddr_V_BVALID(m_axi_foddr_V_BVALID),
    .m_axi_foddr_V_BREADY(grp_testUnLoadImage_fu_231_m_axi_foddr_V_BREADY),
    .m_axi_foddr_V_BRESP(m_axi_foddr_V_BRESP),
    .m_axi_foddr_V_BID(m_axi_foddr_V_BID),
    .m_axi_foddr_V_BUSER(m_axi_foddr_V_BUSER),
    .foddr_V_offset(foddr_V_offset),
    .ibuf0_V_address0(grp_testUnLoadImage_fu_231_ibuf0_V_address0),
    .ibuf0_V_ce0(grp_testUnLoadImage_fu_231_ibuf0_V_ce0),
    .ibuf0_V_q0(ibuf0_V_q0)
);

cnna_mul_mul_10ns_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
cnna_mul_mul_10ns_16s_26_1_1_U25(
    .din0(lineWidthDiv16_fu_342_p0),
    .din1(cnn_iPara_width_read),
    .dout(lineWidthDiv16_fu_342_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_loadImageFromDRAM_fu_215_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_4_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_loadImageFromDRAM_fu_215_ap_start_reg <= 1'b1;
        end else if ((grp_loadImageFromDRAM_fu_215_ap_ready == 1'b1)) begin
            grp_loadImageFromDRAM_fu_215_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_testUnLoadImage_fu_231_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_testUnLoadImage_fu_231_ap_start_reg <= 1'b1;
        end else if ((grp_testUnLoadImage_fu_231_ap_ready == 1'b1)) begin
            grp_testUnLoadImage_fu_231_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_9_reg_390 == 1'd1))) begin
        biasData_reg_170 <= biasData_V_1_fu_302_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        biasData_reg_170 <= bbuf0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_testUnLoadImage_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        hIndex_reg_203 <= hIndex_1_reg_417;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hIndex_reg_203 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_testUnLoadImage_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        ibuf0Index_reg_191 <= ibuf0Index_1_reg_422;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ibuf0Index_reg_191 <= 16'd65535;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_9_fu_286_p2 == 1'd1))) begin
        t_V_reg_180 <= coDiv16_V_fu_296_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_V_reg_180 <= 13'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        hIndex_1_reg_417 <= hIndex_1_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_loadImageFromDRAM_fu_215_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        ibuf0Index_1_reg_422 <= grp_loadImageFromDRAM_fu_215_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        lineWidthDiv16_reg_374 <= lineWidthDiv16_fu_342_p2;
        ret_V_1_reg_385[8 : 0] <= ret_V_1_fu_282_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_3_reg_409 <= tmp_3_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_9_reg_390 <= tmp_9_fu_286_p2;
    end
end

always @ (*) begin
    if ((tmp_9_fu_286_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_4_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_4_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bbuf0_V_address0 = tmp_1_fu_291_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        bbuf0_V_address0 = 9'd0;
    end else begin
        bbuf0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        bbuf0_V_ce0 = 1'b1;
    end else begin
        bbuf0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ibuf0_V_address0 = grp_testUnLoadImage_fu_231_ibuf0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ibuf0_V_address0 = grp_loadImageFromDRAM_fu_215_ibuf_V_address0;
    end else begin
        ibuf0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ibuf0_V_ce0 = grp_testUnLoadImage_fu_231_ibuf0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ibuf0_V_ce0 = grp_loadImageFromDRAM_fu_215_ibuf_V_ce0;
    end else begin
        ibuf0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ibuf0_V_we0 = grp_loadImageFromDRAM_fu_215_ibuf_V_we0;
    end else begin
        ibuf0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((tmp_4_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_fiddr_V_ARVALID = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARVALID;
    end else begin
        m_axi_fiddr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((tmp_4_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_fiddr_V_RREADY = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_RREADY;
    end else begin
        m_axi_fiddr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_foddr_V_AWVALID = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWVALID;
    end else begin
        m_axi_foddr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_foddr_V_BREADY = grp_testUnLoadImage_fu_231_m_axi_foddr_V_BREADY;
    end else begin
        m_axi_foddr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_foddr_V_WVALID = grp_testUnLoadImage_fu_231_m_axi_foddr_V_WVALID;
    end else begin
        m_axi_foddr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((tmp_9_fu_286_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((tmp_9_fu_286_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_4_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_loadImageFromDRAM_fu_215_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_testUnLoadImage_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign biasData_V_1_fu_302_p2 = (biasData_reg_170 | bbuf0_V_q0);

assign coDiv16_V_fu_296_p2 = (t_V_reg_180 + 13'd1);

assign grp_loadImageFromDRAM_fu_215_ap_start = grp_loadImageFromDRAM_fu_215_ap_start_reg;

assign grp_testUnLoadImage_fu_231_ap_start = grp_testUnLoadImage_fu_231_ap_start_reg;

assign hIndex_1_fu_336_p2 = (hIndex_reg_203 + 15'd1);

assign hIndex_cast_fu_327_p1 = hIndex_reg_203;

assign lhs_V_cast_fu_244_p1 = cnn_iPara_ciAlign_V_read;

assign lineWidthDiv16_fu_342_p0 = lineWidthDiv16_fu_342_p00;

assign lineWidthDiv16_fu_342_p00 = tmp_fu_254_p4;

assign m_axi_fiddr_V_ARADDR = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARADDR;

assign m_axi_fiddr_V_ARBURST = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARBURST;

assign m_axi_fiddr_V_ARCACHE = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARCACHE;

assign m_axi_fiddr_V_ARID = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARID;

assign m_axi_fiddr_V_ARLEN = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARLEN;

assign m_axi_fiddr_V_ARLOCK = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARLOCK;

assign m_axi_fiddr_V_ARPROT = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARPROT;

assign m_axi_fiddr_V_ARQOS = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARQOS;

assign m_axi_fiddr_V_ARREGION = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARREGION;

assign m_axi_fiddr_V_ARSIZE = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARSIZE;

assign m_axi_fiddr_V_ARUSER = grp_loadImageFromDRAM_fu_215_m_axi_fiddr_V_ARUSER;

assign m_axi_fiddr_V_AWADDR = 32'd0;

assign m_axi_fiddr_V_AWBURST = 2'd0;

assign m_axi_fiddr_V_AWCACHE = 4'd0;

assign m_axi_fiddr_V_AWID = 1'd0;

assign m_axi_fiddr_V_AWLEN = 32'd0;

assign m_axi_fiddr_V_AWLOCK = 2'd0;

assign m_axi_fiddr_V_AWPROT = 3'd0;

assign m_axi_fiddr_V_AWQOS = 4'd0;

assign m_axi_fiddr_V_AWREGION = 4'd0;

assign m_axi_fiddr_V_AWSIZE = 3'd0;

assign m_axi_fiddr_V_AWUSER = 1'd0;

assign m_axi_fiddr_V_AWVALID = 1'b0;

assign m_axi_fiddr_V_BREADY = 1'b0;

assign m_axi_fiddr_V_WDATA = 128'd0;

assign m_axi_fiddr_V_WID = 1'd0;

assign m_axi_fiddr_V_WLAST = 1'b0;

assign m_axi_fiddr_V_WSTRB = 16'd0;

assign m_axi_fiddr_V_WUSER = 1'd0;

assign m_axi_fiddr_V_WVALID = 1'b0;

assign m_axi_foddr_V_ARADDR = 32'd0;

assign m_axi_foddr_V_ARBURST = 2'd0;

assign m_axi_foddr_V_ARCACHE = 4'd0;

assign m_axi_foddr_V_ARID = 1'd0;

assign m_axi_foddr_V_ARLEN = 32'd0;

assign m_axi_foddr_V_ARLOCK = 2'd0;

assign m_axi_foddr_V_ARPROT = 3'd0;

assign m_axi_foddr_V_ARQOS = 4'd0;

assign m_axi_foddr_V_ARREGION = 4'd0;

assign m_axi_foddr_V_ARSIZE = 3'd0;

assign m_axi_foddr_V_ARUSER = 1'd0;

assign m_axi_foddr_V_ARVALID = 1'b0;

assign m_axi_foddr_V_AWADDR = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWADDR;

assign m_axi_foddr_V_AWBURST = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWBURST;

assign m_axi_foddr_V_AWCACHE = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWCACHE;

assign m_axi_foddr_V_AWID = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWID;

assign m_axi_foddr_V_AWLEN = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWLEN;

assign m_axi_foddr_V_AWLOCK = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWLOCK;

assign m_axi_foddr_V_AWPROT = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWPROT;

assign m_axi_foddr_V_AWQOS = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWQOS;

assign m_axi_foddr_V_AWREGION = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWREGION;

assign m_axi_foddr_V_AWSIZE = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWSIZE;

assign m_axi_foddr_V_AWUSER = grp_testUnLoadImage_fu_231_m_axi_foddr_V_AWUSER;

assign m_axi_foddr_V_RREADY = 1'b0;

assign m_axi_foddr_V_WDATA = grp_testUnLoadImage_fu_231_m_axi_foddr_V_WDATA;

assign m_axi_foddr_V_WID = grp_testUnLoadImage_fu_231_m_axi_foddr_V_WID;

assign m_axi_foddr_V_WLAST = grp_testUnLoadImage_fu_231_m_axi_foddr_V_WLAST;

assign m_axi_foddr_V_WSTRB = grp_testUnLoadImage_fu_231_m_axi_foddr_V_WSTRB;

assign m_axi_foddr_V_WUSER = grp_testUnLoadImage_fu_231_m_axi_foddr_V_WUSER;

assign ret_V_1_fu_282_p1 = ret_V_fu_272_p4;

assign ret_V_4_tr_fu_248_p2 = (lhs_V_cast_fu_244_p1 + 14'd15);

assign ret_V_fu_272_p4 = {{cnn_oPara_coAlign_V_read[12:4]}};

assign tmp_1_fu_291_p1 = t_V_reg_180;

assign tmp_2_fu_308_p2 = ((biasData_reg_170 == 128'd0) ? 1'b1 : 1'b0);

assign tmp_3_cast_fu_314_p3 = ((tmp_2_fu_308_p2[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign tmp_3_fu_322_p2 = (tmp_3_cast_fu_314_p3 & cnn_iPara_height_read);

assign tmp_4_fu_331_p2 = (($signed(hIndex_cast_fu_327_p1) < $signed(tmp_3_reg_409)) ? 1'b1 : 1'b0);

assign tmp_9_fu_286_p2 = ((t_V_reg_180 < ret_V_1_reg_385) ? 1'b1 : 1'b0);

assign tmp_fu_254_p4 = {{ret_V_4_tr_fu_248_p2[13:4]}};

always @ (posedge ap_clk) begin
    ret_V_1_reg_385[12:9] <= 4'b0000;
end

endmodule //testAxiProcess
